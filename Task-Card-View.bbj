REM /**
REM  * TaskCardView.bbj
REM  * @author gosteen, ndecker, bhighhill 
REM  * Task-Card-View.bbj
REM  * TaskCardView represents the childwindow of a task view
REM  */

class public TaskCardView
    field protected BBjButton       btnDeleteTask!
    field protected BBjButton       btnLock!
    field protected BBjButton       btnSetComplete!
    field protected BBjStaticText   description!
    field protected BBjStaticText   due!
    field protected BBjString       flagIcon! = "<html><dwc-icon pool='tabler' name='flag-2-filled'></dwc-icon>"
    field protected BBjPopupMenu    flagPopupMenu!
    field protected BBjString       flagText!
    field protected BBjString       lock! = "<html><dwc-icon pool='tabler' name='lock' style='width: 30px; height: 30px'></dwc-icon>"
    field protected BBjString       lockOpen! = "<html><dwc-icon pool='tabler' name='lock-open' style='width: 30px; height: 30px'></dwc-icon>"
    field protected BBjStaticText   priorityFlag!
    field protected BBjStaticText   status!
    field protected BBjSysGui       sysgui!
    field protected Task            task!
    field protected BBjStaticText   title!
    field protected BBjString       trashIcon! = "<html><dwc-icon pool='tabler' name='trash' style='width: 25px; height: 25px'></dwc-icon>"
    field protected BBjString       uuid!
    field public    BBjChildWindow  win!

    rem /**
    rem  * Creates a task card view for every task
    rem  * 
    rem  * @param parent!, t!           parent! is the parent window which contains all task child windows of a given view, t! is the Task that is to be added to a given view
    rem  */
    method public TaskCardView(BBjWindow parent!, Task t!)
        #sysgui! = BBjAPI().getSysGui()
        #win! = parent!.addChildWindow("", $00108000$, #sysgui!.getAvailableContext())
        #win!.addClass("card-task")
             
        #task! = t!
        #uuid! = #task!.getUuid()
        #win!.setAttribute("id", #uuid!)

        if (#task!.getComplete()) then 
            #win!.removeClass("card-task")
            #win!.addClass("card-task-complete")
            #win!.setToolTipText("Unlock to edit task")
        else
            #win!.setToolTipText("Click to edit task")
        endif
        
REM         #win!.addClass("status-" + #task!.getStatusString(#task!.getStatus()))
        
        if (#task!.getDueDate() > -1 AND #task!.getComplete() = 0) then #due! = #win!.addStaticText("")
        if (#task!.getDueDate() = -1 AND #task!.getComplete() = 0) then #status! = #win!.addStaticText("") 
        if (#task!.getComplete()) then #status! = #win!.addStaticText("Date of Completion")
        
        if (#task!.getComplete() = 0) then 
            #createPopupMenu() 
            #priorityFlag! = #win!.addStaticText("") 
            #priorityFlag!.setPopupMenu(#flagPopupMenu!)
            #setPriorityFlag()
            
            if (#task!.getDueDate() > -1) then
                #status! = #win!.addStaticText("Status: " + #task!.getStatusString(#task!.getStatus()))
                #status!.addClass("card-status-display")
            endif
        else
            #btnLock! = #win!.addButton(#lock!)
            #win!.setUserData(#btnLock!)
            #btnLock!.addClass("card-btn-lock")
            #btnLock!.setCallback(BBjControl.ON_BUTTON_PUSH, #this!, "setLock")
        endif
        
        #title! = #win!.addStaticText("")
        #title!.addClass("card-title-display")     
 
        #description! = #win!.addStaticText("")
        #description!.addClass("card-description-display")

        if (#task!.getComplete() = 0) then 
            #btnSetComplete! = #win!.addButton("Mark as Complete")
        else
            #btnSetComplete! = #win!.addButton("Mark as Incomplete")
        endif
        
        #btnSetComplete!.addClass("card-btn-complete-incomplete")
        #btnSetComplete!.setCallback(BBjControl.ON_BUTTON_PUSH, #this!, "setComplete")

        #btnDeleteTask! = #win!.addButton(#trashIcon!)
        #btnDeleteTask!.addClass("card-btn-delete-task")
        #btnDeleteTask!.setCallback(BBjControl.ON_BUTTON_PUSH, #this!, "onDelete")
        
        #refresh()
    methodend
    
    rem /**
    rem  * - Creates a BBjPopupMenu that contains flag icons representing every priority level except for 
    rem  * the task's priority level
    rem  * - Adds a call back which triggers the #changePriority() method when a new priority flag is selected
    rem  */
    method public void createPopupMenu()
        #flagPopupMenu! = #sysgui!.addPopupMenu()
        
         
        for i = Task.PRIORITY_MAX() to Task.PRIORITY_MIN()             
            flagItem! = #flagPopupMenu!.addMenuItem(-i, #flagIcon!)
            if (#task!.getPriority() = i) then flagItem!.setVisible(0)
            
            flagItem!.addClass("priority-flag priority-" + str(i))
            flagItem!.setCallback(flagItem!.ON_POPUP_ITEM_SELECT, #this!, "changePriority")
        next i
    methodend
    
    rem /**
    rem  * If task is incomplete: 
    rem  * - If a task is past due, adds a "Past Due!" notice
    rem  * - If a task is due today, adds a "Due Today!" notice
    rem  * - Otherwise, adds the task's due date
    rem  * - Notices are set to BBjStaticText #due!
    rem  * 
    rem  * If task is complete: 
    rem  * - adds the date of completion
    rem  * - Completion date is set to BBjStaticText #status!
    rem  */
    method public void setDueNotice()
            #due!.removeClass("due-today past-due")       
            due! = ""
            dueDate! = date(#task!.getDueDate():"%Dl, %Ml %D")
            
            if (#task!.getComplete() = 0) then              
                if (#task!.getDueDate() > -1) AND (#task!.getDueDate() < jul(date(0))) then 
                    due! = "Past Due!"
                    #due!.addClass("card-due-notice")
                    #due!.setToolTipText("Due " + dueDate!)
                endif
                
                if (#task!.getDueDate() = jul(date(0))) then 
                    due! = "Due Today!"
                    #due!.addClass("card-due-notice")
                    #due!.setToolTipText("Due " + dueDate!)
                endif
                
                if (#task!.getDueDate() > -1 AND #task!.getDueDate() > jul(date(0))) then
                    due! = "Due " + STR(dueDate!)
                    #due!.addClass("card-due-date")
                endif
            endif
            
            if (#task!.getComplete()) then 
                #status!.setText("Date of Completion")
                #status!.addClass("card-status-display")
            endif
            
            #due!.setText(due!) 
    methodend
    
    rem /**
    rem  * - Adds a priority flag icon which represents the task's priority level
    rem  * - Icon is set to BBjStaticText #priorityFlag!
    rem  */
    method public void setPriorityFlag()     
        if (#task!.getComplete() = 0) then
            if (#task!.getPriority() = 6) then
                #flagText! = "No priority"
            else
                #flagText! = "Priority " + STR(#task!.getPriority())
            endif           
        
            if (#priorityFlag! <> null()) then 
                #priorityFlag!.setText(#flagIcon!)
                #priorityFlag!.removeClass("priority-1 priority-2 priority-3 priority-4 priority-5 priority-6")
                #priorityFlag!.addClass("card-priority-flag")
                #priorityFlag!.addClass("priority-" + STR(#task!.getPriority()))
                #priorityFlag!.setToolTipText(#flagText!)
            endif
        endif
    methodend

    rem /**
    rem  * - Changes task priority level to priority level selected from the #flagPopupMenu!
    rem  * 
    rem  * @param e!      The BBjPopupSelectEvent that causes this method to be executed 
    rem  */
    method public void changePriority(BBjPopupSelectEvent e!)
        newPriority! = ABS(e!.getMenuItem().getID())
        
        #task!.setPriority(newPriority!)
        BBjAPI().postCustomEvent("TASK_UPDATE", #task!)
        #refresh()
    methodend
    
    rem /**
    rem  * - Toggles a completed task lock icon between open and closed
    rem  * - Icon is set to BBjStaticText #btnLock!
    rem  * - Toggles associated classes
    rem  * 
    rem  * @param e!      The BBjButtonPushEvent that causes this method to be executed 
    rem  */
    method public void setLock(BBjButtonPushEvent e!)
        if (#btnLock!.getText() = #lock!) then
            #btnLock!.setText(#lockOpen!)
            #btnLock!.removeClass("card-btn-lock")
            #btnLock!.addClass("card-btn-lock-open")
            #win!.removeClass("card-task-complete")
            #win!.addClass("card-task")
            #win!.setToolTipText("Click to edit task")
        else
            #btnLock!.setText(#lock!)
            #btnLock!.removeClass("card-btn-lock-open")
            #btnLock!.addClass("card-btn-lock")
            #win!.removeClass("card-task")
            #win!.addClass("card-task-complete")
            #win!.setToolTipText("Unlock to edit task")
        endif
    methodend
    
    rem /**
    rem  * - Toggles the status of a task between complete and incomplete
    rem  * - Toggles the BBjButton btnTaskCompletion! text between "Mark as Complete" & "Mark as Incomplete"
    rem  * - toggles associated classes
    rem  * 
    rem  * @param e!      The BBjButtonPushEvent that causes this method to be executed 
    rem  */
    method public void setComplete(BBjButtonPushEvent e!)
         btnTaskCompletion! = e!.getControl()
        
        if (#task!.getComplete()) then
            #task!.setStatus(#task!.STATUS_INCOMPLETE())
            btnTaskCompletion!.setText("Mark as Complete")
            #win!.removeClass("card-status-complete")
            if (#priorityFlag! <> null()) then #priorityFlag!.removeClass("priority-transparent")
            if (#btnLock! <> null()) then 
                #btnLock!.removeClass("card-btn-lock")
                #btnLock!.addClass("card-btn-lock-open")
                #btnLock!.setText(#lockOpen!)
                #win!.removeClass("card-task-complete")
                #win!.addClass("card-task")
            endif
        else
            #task!.setStatus(#task!.STATUS_COMPLETE())
            btnTaskCompletion!.setText("Mark as Incomplete")
            #win!.addClass("card-status-complete")
            if (#priorityFlag! <> null()) then #priorityFlag!.addClass("priority-transparent")
            if (#btnLock! <> null()) then 
                #btnLock!.addClass("card-btn-lock")
                #btnLock!.removeClass("card-btn-lock-open")
                #btnLock!.setText(#lock!)
                #win!.removeClass("card-task")
                #win!.addClass("card-task-complete")
            endif
        endif
        BBjAPI().postCustomEvent("TASK_UPDATE",#task!)
        #refresh()
    methodend
    
    rem /**
    rem  * - Clears task classes on refresh
    rem  */
    method public void clearStyles()
        #win!.removeClass("status-complete status-blocked status-deferred")      
        if (#due! <> null()) then #due!.removeClass("card-due-notice card-due-date")
    methodend

    rem /**
    rem  * - Updates task data on refresh
    rem  */
    method public void refresh()
        #clearStyles()
        #title!.setText(#task!.getTitle())
        #title!.setToolTipText(#task!.getTitle())
        
        #description!.setText(#task!.getDescription())
        #description!.setToolTipText(#task!.getDescription())
        
        if (#task!.getComplete() = 0) then #status!.setText("Status: " + #task!.getStatusString(#task!.getStatus()))
        if (#task!.getComplete()) then #status!.setText("Date of Completion")

        #win!.addClass("status-" + #task!.getStatusString(#task!.getStatus()))
        
        if (#due! <> null()) then #setDueNotice()
        
        if (#task!.getComplete() = 0) then
            #setPriorityFlag()
            
            if (#due! <> null()) then #setDueNotice() 
            
            if (#flagPopupMenu! <> null()) then
                for i = 1 to #flagPopupMenu!.getChildCount()
                    menuItem! = #flagPopupMenu!.getMenuItem(i)
                    menuItem!.setVisible(1)
                    if (#task!.getPriority() = mod(i,7)) then menuItem!.setVisible(0)
                next i
            endif
        endif
        
        Utils.consoleLog("in task card view")
REM         #win!.removeClass("complete")      
    methodend
    
    rem /**
    rem  * Triggers message box which prompts user for confirmation before deleting a task
    rem  * 
    rem  * @param e!      The BBjButtonPushEvent that causes this method to be executed 
    rem  */
    method public void onDelete(BBjButtonPushEvent e!)
        i = msgbox("This won't do anything yet", BBjSysGui.MSGBOX_BUTTONS_YES_NO + BBjSysGui.MSGBOX_ICON_EXCLAMATION, "Delete Task")
    methodend   
classend

use ::Task.bbj::Task
use ::TaskApp.bbj::TaskApp
use ::Utils.bbj::Utils