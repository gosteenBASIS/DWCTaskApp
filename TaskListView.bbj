REM /**
REM  * TaskListView.bbj
REM  * @author gosteen
REM  *C:\Users\gosteen\eclipse\workspaces\dwc-workspace\TaskApp\TaskListView.bbj
REM  * TaskListView represents the childwindow of a task in a list
REM  */

class public TaskListView
    field protected BBjSysGui       sysgui!
    field public    BBjChildWindow  win!
    field public    Task            task!
    field public    BBjStaticText   title!
    field public    BBjStaticText   description!
    field public    BBjNumber       priority!
    field public    BBjCheckBox     checkbox!
    field public    BBjString       uuid!
    field public    BBjStaticText   due!
    field public    BBjString       flagIcon!
    field public    BBjStaticText   priorityFlag!
    field public    BBjVector       flagVector!
    field public    BBjString       flagText!
    field public    BBjPopupMenu    flagPopupMenu!


    method public TaskListView(BBjWindow parent!, Task t!)
        #sysgui! = BBjAPI().getSysGui()
        #win! = parent!.addChildWindow("", $00108000$, #sysgui!.getAvailableContext())
        #win!.addClass("task clickable")
        #task! = t!
        #uuid! = #task!.getUuid()
        #win!.setAttribute("id", #uuid!)
        #checkbox! = #win!.addCheckBox("")
        #checkbox!.addClass("checkbox")
        #checkbox!.setCallback(BBjControl.ON_CHECK_CHANGE, #this!, "onTaskCheck")
        #priority! = #task!.getPriority()

        #title! = #win!.addStaticText("")
        #title!.addClass("title-display")

        #due! = #win!.addStaticText("")

        #description! = #win!.addStaticText("")
        #description!.addClass("description-display")

        #priorityFlag! = #win!.addStaticText("")
        #priorityFlag!.setCallback(BBjControl.ON_POPUP_REQUEST, #this!, "OnShowPriorityPopup")
        #setPriorityFlag()

        #refresh()
    methodend

    method public void OnShowPriorityPopup(BBjPopupRequestEvent event!)
        if (#flagPopupMenu! = null()) then #createPopupMenu()
        #flagPopupMenu!.show(event!.getControl(), 0, 0)
    methodend

    method public void createPopupMenu()
        #flagPopupMenu! = #sysgui!.addPopupMenu()
        #flagPopupMenu!.addClass("flag-popup")

        redFlag! = "<html><dwc-icon pool='tabler' name='flag-2-filled' id='-1' style='pointer-events: none;'></dwc-icon>"  
        orangeFlag! = "<html><dwc-icon pool='tabler' name='flag-2-filled' id='-2' style='pointer-events: none;'></dwc-icon>"
        yellowFlag! = "<html><dwc-icon pool='tabler' name='flag-2-filled' id='-3' style='pointer-events: none;'></dwc-icon>"
        greenFlag! = "<html><dwc-icon pool='tabler' name='flag-2-filled' id='-4' style='pointer-events: none;'></dwc-icon>"
        blueFlag! = "<html><dwc-icon pool='tabler' name='flag-2-filled' id='-5' style='pointer-events: none;'></dwc-icon>"   
        noPriorityFlag! = "<html><dwc-icon pool='tabler' name='flag-2-filled' id='-6' style='pointer-events: none;'></dwc-icon>"

        #flagVector! = BBjAPI().makeVector()
        #flagVector!.add(redFlag!)
        #flagVector!.add(orangeFlag!)
        #flagVector!.add(yellowFlag!)
        #flagVector!.add(greenFlag!)
        #flagVector!.add(blueFlag!)
        #flagVector!.add(noPriorityFlag!)

        i! = 1
        id! = -1
        while (i! < #flagVector!.size() + 1)
            currentPriority! = #task!.getPriority()
            flag! = #flagVector!.getItem(i! - 1)

            flagItem! = #flagPopupMenu!.addMenuItem(id!, flag!)
            if (currentPriority! = i!) then flagItem!.setVisible(0)

            flagItem!.addClass("priority-" + str(i!))
            flagItem!.setCallback(flagItem!.ON_POPUP_ITEM_SELECT, #this!, "changePriority")

            id! = id! - 1
            i! = i! + 1
        wend
    methodend

    method public void setDueNotice()
        #due!.removeClass("due-today past-due")
        due! = ""

        if (#task!.getDueDate() > -1) AND (#task!.getDueDate() < jul(date(0))) then
            due! = "Past Due!"
             #due!.addClass("due-today past-due")
        endif

        if (#task!.getDueDate() = jul(date(0))) then
            due! = "Due Today!"
             #due!.addClass("due-today")
        endif

        #due!.setText(due!)
    methodend

    method public void setPriorityFlag()
        if (#task!.getPriority() = 6) then
            #flagText! = "No priority"
        else
            #flagText! = "Priority " + STR(#task!.getPriority())
        endif

        if (#task!.getPriority() > 0) then
            #flagIcon! = "<html><dwc-icon pool='tabler' name='flag-2-filled'></dwc-icon>"
        else
            #flagIcon! = ""
        endif

        #priorityFlag!.setText(#flagIcon!)
        #priorityFlag!.removeClass("priority-1 priority-2 priority-3 priority-4 priority-5 priority-6")
        #priorityFlag!.addClass("priority-flag")
        #priorityFlag!.addClass("priority-" + STR(#task!.getPriority()))
        #priorityFlag!.setToolTipText(#flagText!)
    methodend

    method public void changePriority(BBjPopupSelectEvent e!)
        newPriority! = ABS(e!.getMenuItem().getID())

        #task!.setPriority(newPriority!)
        BBjAPI().postCustomEvent("TASK_UPDATE", #task!)
        #refresh()
    methodend

    rem /**
    rem  * Removes the style classes for all possible statuses.
    rem  */
    method public void clearStyles()
        #win!.removeClass("complete incomplete blocked deferred")
    methodend

    rem /**
    rem  * Refresh the TaskListView with the latest information from its Task object.
    rem  * This is called from the TaskApp class when a TASK_UPDATE event is posted.
    rem  */
    method public void refresh()
        if (#task!.getDeleted()) then
            #setVisible(0)
        endif
        #clearStyles()
        #title!.setText(#task!.getTitle())
        #description!.setText(#task!.getDescription())
        #checkbox!.setSelected(#task!.getComplete())
        #win!.addClass(#task!.getStatusString(#task!.getStatus()))
        if (#task!.getComplete()) then
            #win!.addClass("complete")
        endif
        Utils.consoleLog(#task!.getAsString())
        #checkbox!.addClass(#task!.getStatusString(#task!.getStatus()))
        #setPriorityFlag()
        #setDueNotice()
        if (#flagPopupMenu! <> null()) then
            for i = 1 to #flagPopupMenu!.getChildCount()
                menuItem! = #flagPopupMenu!.getMenuItem(i)
                menuItem!.setVisible(1)
                if (#task!.getPriority() = mod(i,7)) then
                    menuItem!.setVisible(0)
                endif
            next i
        endif
    methodend

    rem /**
    rem  * Sets the visibility of the ChildWindow of the TaskListView
    rem  * Calls setVisible on #win!
    rem  *
    rem  * @param visible!   BBjNumber acting as a boolean specifying the visibility
    rem  */
    method public void setVisible(BBjNumber visible!)
        #win!.setVisible(visible!)
    methodend

    rem /**
    rem  * Method to run when a task's checkbox is changed
    rem  *
    rem  * @param e!    A BBjCheckChangeEvent
    rem  */
    method public void onTaskCheck(BBjCheckChangeEvent e!)
        #clearStyles()
        if (#task!.getComplete()) then
            #task!.setStatus(#task!.STATUS_INCOMPLETE())
            #task!.setComplete(0)
        else
            #task!.setStatus(#task!.STATUS_COMPLETE())
            #task!.setComplete(1)
        endif
        BBjAPI().postCustomEvent("TASK_UPDATE",#task!)
        Utils.consoleLog("just posted task update custom event")
    methodend


classend

use ::Task.bbj::Task
use ::Utils.bbj::Utils