/* The CSS file that accompanies the TaskApp DWC application */

/* The TaskApp's CSS custom properties              */
/* ================================================ */
:root {
    --app-color-h: 15;
    --app-color-s: 75%;
    --app-color-b: 35%;
    --app-color-primary: hsl(var(--app-color-h), var(--app-color-s), var(--app-color-b));
    --app-color-window-bg: hsl(0, 0%, 95%);
    --app-color-navbar-bg: hsl(var(--app-color-h), calc(var(--app-color-s) * 0.75), 95%);
    --app-color-text-normal-l: 20%;
    --app-color-text-light-l:  40%;
    --app-color-text-faint-l:  60%;
    --app-color-text-normal: hsl(0, 0%, var(--app-color-text-normal-l));
    --app-color-text-light:  hsl(0, 0%, var(--app-color-text-light-l));
    --app-color-text-faint:  hsl(0, 0%, var(--app-color-text-faint-l));
    --app-font-family-task: var(--dwc-font-family);
    --app-font-weight-task: var(--dwc-font-weight-semibold);
    --app-font-size-task: var(--dwc-font-size-m);
    --app-font-spacing-task: normal;
}

/* Override the DWC's default CSS custom properties */
/* ================================================ */
:root {
    --dwc-font-family: 'AR One Sans', 'Gabarito', 'K2D', 'Overlock', 'Encode Sans Semicondensed', 'Aller', 'Alatsi', 'Akrobat', var(--dwc-font-family-sans);
    --dwc-color-body-text: var(--app-color-text-normal);
    --dwc-color-primary-h: var(--app-color-h);
    --dwc-color-default-h: var(--app-color-h);
    --dwc-color-default-s: 25%;
    --dwc-list-padding: calc(var(--dwc-space) / 2);
}


/* Dark mode CSS custom properties                  */
/* ================================================ */
[data-app-theme="dark"], [data-app-theme="dark-pure"] {
    --app-color-navbar-bg: hsl(var(--app-color-h), calc(var(--app-color-s) * 0.50), 15%);
    --app-color-text-normal-l: 90%;
    --app-color-text-light-l:  70%;
    --app-color-text-faint-l:  60%;
}


/* Global definitions for multiple controls         */
/* ================================================ */

/* Modify the entire DOM */
html, body, .BBjWindowManagerDesktop {
    background: var(--app-color-window-bg);
    padding: 0;
    margin: 0;
    width: 100%;
    height: 100%;
    display: flex;
}

/* Modify ALL BBjButtons by setting their color and font size & weight */
dwc-button::part(label) {
    /* color: var(--app-color-primary); */
    font-size: var(--dwc-font-size-l);
    font-weight: var(--dwc-font-weight-semibold);
}

/* Set a larger minimum width for the message box buttons */
.BBjMsgBox-button {
    min-width: 5em;
}

 /* Make the checkboxes zoom into 100% size on load */
dwc-checkbox:not(hydrated) {
    transform: scale3d(0,0,0);
    transition: all 500ms ease;
    transition-delay: 200ms;
}
dwc-checkbox.hydrated {
    transform: scale3d(1,1,1);
    padding-left: 1px;
}
.fadeIn {
    animation: fadeIn 1000ms ease-in-out 1 forwards;
}
.zoomIn {
    animation: zoomIn 400ms ease-in-out 1 forwards;
}
.bounceIn {
    animation: bounceIn 2500ms ease-in-out 1 forwards;
}
.pulse {
    animation: bounceIn 2500ms ease-in-out 1 forwards;
}


/* BBjRadioButton styled as a Switch                */
/* ================================================ */
.switchLayout {
    --dwc-switch-size: 4em;
    --dwc-switch-background: hsl(var(--app-color-h), 25%, 90%);
    --dwc-switch-hover-background:  hsl(var(--app-color-h), 25%, 97%);
    --dwc-switch-checked-background: hsl(var(--app-color-h), var(--app-color-s), 35%);
    --dwc-switch-hover-checked-background: hsl(var(--app-color-h), var(--app-color-s), 42%);
}
.switchLayout::part(input) {
    width: 6em;
}
.switchLayout.dwc-checked::part(input)::before {
    transform: translateX(200%);
}
.switchLayout:not([checked])::part(input)::after {
    content: 'List';
    right: 1.0em;
    position: absolute;
    font-weight: bold;
}
.switchLayout[checked]::part(input)::after {
    content: 'Card';
    left: 1.0em;
    position: absolute;
    font-weight: bold;
}


/* Layout                                    */
/* https://vue-grid-generator.netlify.app/
{"areas":[["winNavBar","winToolBar"],["winNavBar","winTitle"],["winNavBar","winTasks"]],"columns":["5em","1fr"],"rows":["3em","10em","1fr"],"gridWidth":"100%","gridHeight":"100%"}
*/
/* ================================================ */

.BBjSimpleWindow {
    width: 100%;
    height: 100%;
}

.winMain {
    display: flex;
    max-height: 100dvh;
}

.winMain .BBjPanel {
    display: grid;
    width: 100%;
    height: 100%;
    grid-template-areas: 'winNavBar winToolBar' 'winNavBar winTitle' 'winNavBar winTasks';
    grid-template-columns: 15em 1fr;
    grid-template-rows: 3em 5em 1fr;
}

.winToolBar, .winTitle, .winTasks {
    margin: 0 auto;
    width: 100%;
    padding-left: 5%;
    padding-right: 5%;
}

.winNavBar {
    grid-area: winNavBar;
    background-color: var(--app-color-navbar-bg);
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    width: 100%;
    padding: var(--dwc-space);
    gap: calc(var(--dwc-space) * 3);
}

.winToolBar {
    grid-area: winToolBar;
    max-width: 100%;
    display: flex;
    flex-flow: row;
    align-items: center;
    padding: var(--dwc-space);
    gap: var(--dwc-space) var(--dwc-space);

    /* This keeps the buttons together and centers them on the display */
    /* width: fit-content;
    justify-content: space-evenly; */

    /* This keeps the buttons on the far right edge of the display */
    width: 100%;
    justify-content: end;
}

.winTitle {
    grid-area: winTitle;
    display: flex;
    flex-flow: column;
    align-items: stretch;
    justify-content: center;
}
.winTasks {
    grid-area: winTasks;
    overflow-y: scroll;
    overflow-x: hidden;
    width: 100%;
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;
    justify-content: center;
    padding-top: 2em;
    padding-bottom: 0.5em;
}

.taskList {
    min-width: 200px;
    max-width: 1000px;
    overflow-y: scroll;
}


/* NavBar Items (left-most window)                  */
/* ================================================ */
.nav_item {
    width: 100%;
}

.nav_user_name {
    height: 2em;
    line-height: 2.5em;
    text-indent: 2.75em;
}

.nav_user_name::before {
    position: absolute;
    top: var(--dwc-space);
    left: var(--dwc-space);
    width: 2.5em;
    height: 2.5em;
    background: var(--app-color-primary);
    border-radius: 100%;
    text-indent: initial;
    text-align: center;
    line-height: 2.5em;
    color: var(--dwc-color-white);
    font-weight: 700;
}


/* Task Property Sheet Styling */
.BBjTopLevelWindow.BBjDialog {
    margin: auto;
}

.winTaskPropertiesContainer.BBjTopLevelWindow {
    /* Had to over-specify to "win the specificity battle" with DWC */
     max-height: 90dvh;
     overflow: auto;
     max-width: max(300px, 40dvw);
     display: table;
}

.winTaskProperties .BBjPanel {
    max-width: 25em;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    /* max-width: 40dvw; */
    padding: var(--dwc-space-l);
    gap: var(--dwc-space-m);
    /* width: max(300px, 40dvw); */
}

.winTaskProperties .BBjPanel .BBjControl {
    width: 100%;
}

.winTaskProperties .BBjPanel .BBjInputD,
.winTaskProperties .BBjPanel .BBjListButton {
    flex: 1 1 auto;
    min-width: 10em;
    width: auto;
}

.winTaskProperties .BBjPanel .BBjButton {
    flex: 1 1 30%;
    min-width: 10em;
    width: auto;
}

.winTaskProperties .BBjPanel .BBjControl:last-child {
    width: 100%;
}

@media (max-height: 600px) {
    .winTaskPropertiesContainer.BBjTopLevelWindow {
        width: 90%; /* Expand width to 100% when screen height is too small */
        max-width: none; /* Remove maximum width constraint */
    }
}

@media (max-width: 500px) {
    .winNavBar {
        display: none;
    }

    .winMain .BBjPanel {
        grid-template-columns: 0 1fr;
    }

    .winTasks {
        padding: 5% 5%;
    }
}

/* .winTaskProperties .BBjChildWindow {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    margin-top: 1em;
    padding: var(--dwc-focus-ring-width);
}
*/


/* Day and Date headers for TaskList window         */
/* ================================================ */
.labelDay {
    font-size: 1.5em;
    font-weight:  var(--dwc-font-weight-bold);
}
.labelDate {
    font-size: 1.1em;
    font-weight: var(--dwc-font-weight-semibold);
}
.labelSortingIndicator {
    color: var(--app-color-text-light);
    font-size: 0.80em;
    font-weight: normal;
}

.BBjDialogGlassPane {
    background-color: hsla(0, 0%, 0%, 0.5);
}





.menu-item::part(control) {
	padding: none;
}

.menu-item::part(label) {
	display: none;
}

.menu_collapse::part(control) {
    height: 3em;
}

.no-events {
    pointer-events: none;
}

/*  Toolbar Icons                                   */
/* ================================================ */
.toolbar_icon::part(control), .toolbar_icon::part(control)::before {
    background: transparent;
    color: var(--app-color-text-faint);
    transition: all 100ms ease;
    border-color: transparent;
    border-radius: 0.5em;
}
.toolbar_icon::part(control):hover, .toolbar_icon::part(control):hover::before {
    border-color: transparent;
    color: var(--app-color-text-normal);
}

/* The reload toolbar icon is special and has a unique hover effect */
.icon_reload.toolbar_icon::part(control) {
    color: var(--dwc-color-danger);
    opacity: 0.75;
    transition: all 0.1s ease-in-out;
}
.icon_reload.toolbar_icon::part(control):hover {
    opacity: 1.0;
    background: var(--dwc-color-danger);
    color: var(--dwc-color-white);
}

.icon-completed-selected dwc-icon {
    opacity: 1.0;
    color: green;
}



/* FAB (Floating Action Button) to add a task       */
/* ================================================ */
.btnAddTaskFAB {
    position: absolute;
    right: 3em;
    bottom: 1.5em;
    z-index: 1000;
    width: 3em;
    height: 3em;
    line-height: 1.25rem;
}
.btnAddTaskFAB::part(control) {
    border-radius: 100em;
    box-shadow: 0 0.1em 0.5em hsla(0, 0%, 0%, 0.35);
}



/* Animations                                       */
/* ================================================ */
@keyframes zoomIn {
    from {
        transform: scale3d(0, 0, 0);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes bounceIn {
    from,
    20%,
    40%,
    60%,
    80%,
    to {
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    0% {
      transform: scale3d(0, 0, 0);
    }
    20% {
        transform: scale3d(1.2, 1.2, 1.2);
    }
    40% {
        transform: scale3d(0.8, 0.8, 0.8);
    }
    60% {
        transform: scale3d(1.07, 1.07, 1.07);
    }
    80% {
        transform: scale3d(0.9, 0.9, 0.9);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}

@keyframes pulse {
    from {
        transform: scale3d(1, 1, 1);
    }
    50% {
        transform: scale3d(1.1, 1.1, 1.1);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}
