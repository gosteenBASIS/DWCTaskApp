/* The CSS file that accompanies the TaskApp DWC application */

/* The TaskApp's CSS custom properties       */
/* ========================================  */
:root {
    --app-color-h: 15;
    --app-color-s: 75%;
    --app-color-b: 35%;
    --app-color-primary: hsl(var(--app-color-h), var(--app-color-s), var(--app-color-b));
    --app-color-window-bg: hsl(0, 0%, 95%);
    --app-color-navbar-bg: hsl(var(--app-color-h), calc(var(--app-color-s) * 0.75), 95%);
    --app-color-text-normal: hsl(0, 0%, 20%);
    --app-color-text-light: hsl(0, 0%, 40%);
    --app-color-text-faint:hsl(0, 0%, 60%);
     --app-font-task: var(--bbj-font-family);
}

/* Overriding the DWC's default CSS custom properties */
/* ========================================  */
:root {
    --bbj-font-family: 'AR One Sans', 'Gabarito', 'K2D', 'Overlock', 'Encode Sans Semicondensed', 'Aller', 'Alatsi', 'Akrobat', var(--bbj-font-family-sans);
    --bbj-color-body-text: var(--app-color-text-normal);
    --bbj-color-primary-h: var(--app-color-h);
    --bbj-color-default-h: var(--app-color-h);
    --bbj-color-default-s: 25%;
    --bbj-list-padding: calc(var(--bbj-space) / 2);
}

/* Global definitions for multiple controls  */
/* ========================================  */

/* Modify the entire DOM */
html, body, .BBjWindowManagerDesktop {
    background: var(--app-color-window-bg);
    padding: 0;
    margin: 0;
    width: 100%;
    height: 100%;
}

/* Modify ALL BBjButtons by setting their color and font size & weight */
bbj-button::part(label) {
/*     color: var(--app-color-primary); */
    font-size: var(--bbj-font-size-l);
    font-weight: var(--bbj-font-weight-semibold);
}

/* Layout                                    */
/* https://vue-grid-generator.netlify.app/
{"areas":[["winNavBar","winToolBar"],["winNavBar","winTitle"],["winNavBar","winTasks"]],"columns":["5em","1fr"],"rows":["3em","10em","1fr"],"gridWidth":"100%","gridHeight":"100%"}
*/
/* ========================================  */

.BBjSimpleWindow {
    width: 100%;
    height: 100%;
}

.winMain {
    display: flex;
    max-height: 100vh;
}

.winMain .BBjPanel {
    display: grid;
    width: 100%;
    height: 100%;
    grid-template-areas: 'winNavBar winToolBar' 'winNavBar winTitle' 'winNavBar winTasks';
    grid-template-columns: 12em 1fr;
    grid-template-rows: 3em 4em 1fr;
}

.winToolBar, .winTitle, .winTasks {
    /* max-width: 20em; */
    margin: 0 auto;
    width: 100%;
    padding-left: 5%;
    padding-right: 5%;
}

.winNavBar {
    grid-area: winNavBar;
    background-color: var(--app-color-navbar-bg);
    display: flex;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
<<<<<<< HEAD
    width: 100%;
=======
    padding: var(--bbj-space);
    gap: calc(var(--bbj-space) * 3);
>>>>>>> 932e085407dbf4c179c7a03c10326c4ca8f105ef
}

.winToolBar {
    grid-area: winToolBar;
    max-width: 100%;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: space-evenly;
    padding: var(--bbj-space);
    gap: var(--bbj-space) var(--bbj-space);

    /* This keeps the buttons together and centers them on the display */
    /* width: fit-content;
    justify-content: space-evenly; */

    /* This keeps the buttons on the far right edge of the display */
    width: 100%;
    justify-content: end;
}

.winTitle {
    grid-area: winTitle;
    display: flex;
    flex-flow: column;
    align-items: stretch;
    justify-content: center;
    height: fit-content;
}

.winTaskView {
	margin-top: 70px;
	display: flex;
	/* flex-wrap: wrap; */
 	justify-content: center;
	
}

/* .winTasks {
    grid-area: winTasks;
    overflow-y: scroll;
    overflow-x: hidden;
    width: 100%;
    flex-grow: 1;
    min-width: 50%;
    padding-left: 5%;
    padding-right: 5%;
} */

.winTasks {
  	display: flex;
  	padding-top: 30px;
  	justify-content: space-evenly;
  	flex-direction: row;
  	flex-wrap: wrap;
  	gap: 30px;
  	overflow: scroll;
  	max-width: fit-content;
  	padding-bottom: 130px;
}

.winViews {
 	margin-top: 35px;
	width: 100%;
	display: flex;
	justify-content: center;
}

.btnView {
	margin-left: 5px;
	margin-right: 5px;
}

.view-btn-selected::part(control) {
	background-color: var(--bbj-color-white);
}


/* NavBar Items */
.nav_item {
    width: 100%;
}

.nav_user_name {
    height: 2em;
    line-height: 2.5em;
    text-indent: 2.75em;
}

.nav_user_name::before {
    position: absolute;
    top: var(--bbj-space);
    left: var(--bbj-space);
    width: 2.5em;
    height: 2.5em;
    background: var(--app-color-primary);
    border-radius: 100%;
    text-indent: initial;
    text-align: center;
    line-height: 2.5em;
    color: var(--bbj-color-white);
    font-weight: 700;
}


/* Task Property Sheet Styling */
.BBjTopLevelWindow.BBjDialog {
    margin: auto;
}

.winTaskPropertiesContainer.BBjTopLevelWindow {
    /* Had to over-specify to "win the specificity battle" with DWC */
     max-height: 90vh;
     overflow: auto;
     max-width: max(300px, 40vw);
}

.winTaskProperties .BBjPanel {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    /* max-width: 40vw; */
    padding: var(--bbj-space-l);
    gap: var(--bbj-space-m);
    /* width: max(300px, 40vw); */
}

.winTaskProperties .BBjPanel .BBjControl {
    width: 100%;
}

.winTaskProperties .BBjPanel .BBjButton {
    flex: 1 1 auto;
    min-width: 10em;
    width: auto;
}

.winStatus {
	max-height: 10em;
	padding-top: 10px;
	border: transparent;
}

/* .winTaskProperties .BBjChildWindow {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    margin-top: 1em;
    padding: var(--bbj-focus-ring-width);
}

.BBjDialogGlassPane {
    background-color: hsla(0, 0%, 0%, 0.5);
}

/* Task Styling */
/* ============ */

/* .task {
	display: grid;
	grid-template-columns: .5fr 8fr 2fr;
	grid-column-gap: 5px;
    max-height: 5em;
    border: transparent;
    border-bottom-color: rgba(0, 0, 0, .2);
    padding-top: 5px;
} */

.task {
	/* background-color: var(--app-color-window-bg); */
	border: transparent;
	border-radius: 2em;
	max-width: 280px;
	min-width: 220px;
	max-height: 320px;
	box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
	display: grid;
	grid-template-columns: 1fr 5ch;
	grid-template-rows: min-content min-content 5em 9.3em 3em;
	padding: 1.4em;
	transition: all 300ms ease !important;
}

.task:hover {	
	transform: scale(0.95);
	box-shadow: 0 0 4px rgba(149, 157, 165, 0.2);
	cursor: pointer;
}

 .task-complete {
	/* background-color: var(--app-color-window-bg); */
	border: transparent;
	border-radius: 2em;
	max-width: 280px;
	min-width: 220px;
	max-height: 320px;
	box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
	display: grid;
	grid-template-columns: 1fr 5ch;
	grid-template-rows: min-content min-content 5em 9.3em 3em;
	padding: 1.4em;
	transition: all 300ms ease !important;
	cursor: pointer;
}  

.task .BBjStaticText {
    font-family: var(--app-font-task);
    font-weight: 500;
}

/* Checkbox styling on task-list-view */
.checkbox::part(input-wrapper) {
	border-radius: 100%;
	color: black;
	margin-right: 2px;
	filter: scale(2);
	background-color: white;
}

/* Adds check mark on hover of checkbox */
.checkbox::part(input-wrapper):hover {
	content: url(data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20class=%22icon%20icon-tabler%20icon-tabler-check%22%20width=%2224%22%20height=%2224%22%20viewBox=%220%200%2024%2024%22%20stroke-width=%222%22%20stroke=%22currentColor%22%20fill=%22none%22%20stroke-linecap=%22round%22%20stroke-linejoin=%22round%22%3E%3Cpath%20stroke=%22none%22%20d=%22M0%200h24v24H0z%22%20fill=%22none%22/%3E%3Cpath%20d=%22M5%2012l5%205l10%20-10%22%20/%3E%3C/svg%3E);
 	/* opacity: .5; */
	/* transition: .5s ease-in-out; */
}

/* >>>>>>> 932e085407dbf4c179c7a03c10326c4ca8f105ef */
/* Task items that are incomplete */
.incomplete::part(input-wrapper) {
    border-color: gray;
    background-color: white;
}

/* Task items that are complete */
.complete {
	text-decoration: line-through;	
/* 	background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(110,161,110,0.4990589985994398) 33%, rgba(136,178,136,0.5) 66%, rgba(255,255,255,0) 100%); */
}

.complete::part(input-wrapper) {
	border-color: rgb(110, 161, 110);
	background-color: rgba(110, 161, 110, .5);
}


/* Task items that are deferred */
.deferred::part(input-wrapper) {
    border-color: rgb(167, 151, 66);
    background-color: rgba(167, 151, 66, .5);
}

/* Task items that are deferred */
.blocked::part(input-wrapper) {
    border-color: rgb(197, 124, 124);
    background-color: rgba(197, 124, 124, .5);
}

/* Items that are clickable, and hovered over */
.clickable:hover {
    filter: brightness(80%);
    cursor: pointer;
}

.labelDay {
    font-size: 1.5em;
    font-weight: bold;
}
.labelDate {
    color: var(--app-color-text-light);
    font-size: 0.85em;
    font-weight: normal;
}


/* Title styling on task-list-view */
.title-display {
	display: flex;
	grid-column: 1 / 3;
	padding-top: .5em;
	grid-row: 3;
	justify-self: left;
	align-items: end;
	font-size: 18px;
}

.task .BBjStaticText .title-display {
	font-weight: 900;
}

.status-display {
	grid-row: 2 / 2;
	grid-column: 1 / 1;
	padding-top: .2em;
	margin-bottom: -1em;
}

/* Indicator flag styling on task-list-view */
.priority-flag {
	background-color: transparent;
	justify-self: right;
	grid-column-start: 2;
	grid-row: 1 / span 2;
}

.btn-complete-incomplete {
	justify-self: right;
	grid-row: 5;
}

.btn-complete-incomplete::part(control) {
	padding: 0 10px;
	border-radius: 10px;
}

/* Trash can icon styling on Completed-task-list-view */
.btn-delete-task {
	justify-self: right;
	grid-row: 5;
	margin-right: -10px;
}

.btn-delete-task::part(control), .btn-delete-task::part(control):before {
	font-size: 15px;
	background-color: transparent;
	justify-self: right;
	color: var(--bbj-color-black);
	opacity: .4;
	width: fit-content;
	border: transparent;
}

.btn-delete-task::part(control):hover {
	opacity: 1;
}

.btn-lock, .btn-lock-open {
	margin-top: -7px;
	margin-right: -7px;
}

.btn-lock::part(control), .btn-lock::part(control):before {
	font-size: 15px;
	background-color: transparent;
	justify-self: right;
	color: var(--bbj-color-danger);
	opacity: .5;
	border: transparent;
	grid-column-start: 2;
	grid-row: 1 / span 2;
}

.btn-lock-open::part(control), .btn-lock-open::part(control):before {
	font-size: 15px;
	background-color: transparent;
	justify-self: right;
	color: var(--bbj-color-success);
	opacity: .5;
	border: transparent;
	grid-column-start: 2;
	grid-row: 1 / span 2;
}

.btn-save {
	margin-top: 10px;
}

.btn-save::part(control) {
	color: var(--bbj-color-white);
}

.btn-cancel {
	margin-right: 10px;	
}

.btn-cancel::part(control) {
	background-color: transparent;
	color: var(--bbj-color-black);
	opacity: .4;
}

.btn-cancel::part(control):hover {
	opacity: 1;
}


/* Description styling on task-list-view */
.description-display {
	grid-row-start: 4;
 	grid-column: 1 / 3;
 	overflow: hidden;
    text-overflow: ellipsis;
	opacity: .5;
}

.due-date {
	background-color: lightgray;
	width: fit-content;
	padding: .3em;
	border-radius: .4em;
}

.due-notice {
	color: var(--bbj-color-danger);
	justify-self: left;
	white-space: nowrap;
	grid-row: 1 / 1;
	grid-column: 1 / 1;
	padding-top: 5px;
	display: flex;
}

.priority-0 {
	color: var(--bbj-color-black);
	opacity: .1;
}

.priority-1 {
	color: #2c80d4;
}

.priority-2 {
	color: #47942f;
}

.priority-3 {
	color: #f5e102;
}

.priority-4 {
	color: #f58402;
}

.priority-5 {
	color: #f50202;
}

.priority-transparent {
	color: transparent;
}

.menu-item::part(control) {
	padding: none;
}

.menu-item::part(label) {
	display: none;
}

.status-blocked {
	background-color:rgba(197, 124, 124, .1);
}

.status-deferred {
	background-color: rgba(149, 157, 165, 0.1);
}

.status-complete {
	background-color: rgba(6, 209, 60, .05); 
}

/* adding alpha to bbj color - color: hsla(var(--bbj-color-primary-h), var(--bbj-color-primary-s), 40%, 0.25); */

/* ANIMATIONS */
/* ========================================  */
@keyframes completion-animation {
	0% {background-color: transparent;}
	50% {background-color: #47942f;}
	100% {background-color: transparent;}
}



/* FAB Floating Action Button  */
/* ========================================  */
.btnAddTaskFAB {
    position: absolute;
    right: 1em;
    bottom: 1em;
    z-index: 1000;
    width: 3em;
    height: 3em;
    line-height: 1.25rem;
}
.btnAddTaskFAB::part(control) {
    border-radius: 100em;
    box-shadow: 0 0.1em 0.5em hsla(0, 0%, 0%, 0.35);
}
.btnAddTaskFAB::part(label) {
    font-size: 200%;
}

/*  Toolbar Icons */
/* ========================================  */
.toolbar_icon::part(control), .toolbar_icon::part(control):before {
    background: transparent;
    color: var(--app-color-text-faint);
    transition: all 100ms ease;
    border-color: transparent;
    border-radius: 0.5em;
}
.toolbar_icon::part(control):hover, .toolbar_icon::part(control):before:hover {
    border-color: transparent;
    color: var(--app-color-text-normal);
}

.icon_reload.toolbar_icon::part(control) {
    color: var(--bbj-color-danger);
    opacity: 0.75;
    transition: all 0.1s ease-in-out;
}
.icon_reload.toolbar_icon::part(control):hover {
    opacity: 1.0;
    background: var(--bbj-color-danger);
    color: var(--bbj-color-white);
}

.icon-completed.toolbar_icon::part(control) {
    color: var(--bbj-color-success);
    opacity: 0.75;
    transition: all 0.1s ease-in-out;
}
.icon-completed.toolbar_icon::part(control):hover {
    opacity: 1.0;
    background: var(--bbj-color-success);
    color: var(--bbj-color-white);
}

.icon-completed-selected.icon-completed.toolbar_icon::part(control) {
    opacity: 1.0;
    background: var(--bbj-color-success);
    color: var(--bbj-color-white);
}

.menu_collapse::part(control) {
    height: 3em;
}
