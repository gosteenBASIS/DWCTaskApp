REM /**
REM  * TaskView.bbj
REM  * @author gosteen
REM  *C:\Users\gosteen\eclipse\workspaces\bbj-workspace\TaskApp\TaskView.bbj
REM  */
REM package TaskApp

REM /**
REM  *  The view controller for tasks that are displayed by the Task App.  Serves as the basis for TaskListView and TaskCardView
REM  */
class public TaskView
    field public    Task            task!
    field public    BBjChildWindow  win!
    field public    BBjString       uuid!
    field public    BBjPopupMenu    flagPopupMenu!
    field protected BBjSysGui       sysgui!
    field public    BBjStaticText   title!
    field public    BBjStaticText   description!
    field public    BBjStaticText   due!
    field public    BBjStaticText   priorityFlag!
    field public    BBjString   flagIcon! = "<html><dwc-icon pool='tabler' name='flag-2-filled'></dwc-icon>"
 
    REM /**
    REM  * Constructor for the TaskView object
    REM  * 
    REM  * @param BBjWindow parent!     The parent BBjWindow that this TaskView will be added to
    REM  * @param Task t!               The Task object containing the task information that will be displayed
    REM  * @return TaskView             The newly created TaskView
    REM  * 
    REM  */
    method public TaskView(BBjWindow parent!, Task t!)
        #sysgui! = BBjAPI().getSysGui()
        #task! = t!
        #uuid! = #task!.getUuid()

        #win! = parent!.addChildWindow("", $00108000$, #sysgui!.getAvailableContext())
        #win!.setAttribute("id", #uuid!)
        #win!.addClass("task clickable")

        #title! = #win!.addStaticText("")
        #title!.addClass("textTitle")
        #description! = #win!.addStaticText("")
        #description!.addClass("textDescription")

        #due! = #win!.addStaticText("")
        #due!.addClass("dueNotice")
        #priorityFlag! = #win!.addStaticText(#flagIcon!)
        #priorityFlag!.addClass("priorityFlag")
        #priorityFlag!.setCallback(BBjControl.ON_POPUP_REQUEST, #this!, "OnShowPriorityPopup")
        #setPriorityFlag()
    methodend

    REM /**
    REM  * Refresh the TaskView with the latest information from its Task object.
    REM  * This is called from the TaskApp class when a TASK_UPDATE event is posted.
    REM  */
    method public void refresh()
        if (#task!.getDeleted()) then
            #setVisible(0)
        endif
        #clearStyles()
        #title!.setText(#task!.getTitle())
        #description!.setText(#task!.getDescription())
        if (#task!.getComplete()) then
            #win!.addClass("complete")
        endif
        #setPriorityFlag()
        #setDueNotice()
        if (#flagPopupMenu! <> null()) then
            for i = 1 to #flagPopupMenu!.getChildCount()
                menuItem! = #flagPopupMenu!.getMenuItem(i)
                menuItem!.setVisible(1)
                if (#task!.getPriority() = mod(i,6)) then
                    menuItem!.setVisible(0)
                endif
            next i
        endif
    methodend

    REM /**
    REM  * Sets the visibility of the ChildWindow of the TaskView
    REM  * Calls setVisible on #win!
    REM  *
    REM  * @param BBjNumber visible!   BBjNumber acting as a boolean specifying the visibility
    REM  */
    method public void setVisible(BBjNumber visible!)
        #win!.setVisible(visible!)
    methodend

    REM /**
    REM  * Removes the style classes for all possible statuses.
    REM  */
    method public void clearStyles()
        #win!.removeClass("complete incomplete")
        #win!.removeClass("status-complete")
    methodend

    REM /**
    REM  * Sets the label for when the taks is due.  If the due date of the task is ahead of the current date,
    REM  * the label will be set to the current date. If the due date of the task is equal to the current date,
    REM  * the label will be set to "Due Today!"  If the due date of the task has already passed, the label will be set
    REM  * to "Past Due!"
    REM  */
    method public void setDueNotice()
        #due!.removeClass("dueToday pastDue")
        due! = ""
        dueDate! = #task!.getDueDate()
        formattedDueDate! = date(#task!.getDueDate():"%Dl, %Ml %D")

        if (dueDate! > -1) AND (dueDate! < jul(date(0))) then
            due! = "Past Due!"
            #due!.addClass("pastDue")
        endif

        if (dueDate! = jul(date(0))) then
            due! = "Due Today!"
            #due!.addClass("dueToday")
        endif

        #due!.setText(due!)
        #due!.setToolTipText("Due " + formattedDueDate!)
    methodend

    REM /**
    REM  * Adds a priority flag icon which represents the task's priority level.
    REM  */
    method public void setPriorityFlag()
        flagText! = "Priority " + STR(#task!.getPriority())
        #priorityFlag!.removeClass("priority-1 priority-2 priority-3 priority-4 priority-5 priority-0")
        #priorityFlag!.addClass("priority-" + STR(#task!.getPriority()))
        #priorityFlag!.setToolTipText(flagText!)
    methodend

    REM /**
    REM  * Creates a BBjPopupMenu that contains flag icons representing every priority level except for
    REM  * the task's priority level.
    REM  */
    method public void createPopupMenu()
        #flagPopupMenu! = #sysgui!.addPopupMenu()
        
         
        for i = Task.PRIORITY_MAX() to Task.PRIORITY_MIN()             
            flagItem! = #flagPopupMenu!.addMenuItem(-i, #flagIcon!)
            if (#task!.getPriority() = i) then flagItem!.setVisible(0)
            
            flagItem!.addClass("priority-flag priority-" + str(i))
            flagItem!.setCallback(flagItem!.ON_POPUP_ITEM_SELECT, #this!, "changePriority")
        next i
    methodend


    method public void OnShowPriorityPopup(BBjPopupRequestEvent event!)
        if (#flagPopupMenu! = null()) then #createPopupMenu()
        #flagPopupMenu!.show(event!.getControl(), 0, 0)
    methodend

    REM /**
    REM  * -Changes task priority level to priority level selected from the #flagPopupMenu!
    REM  *
    REM  * @param BBjPopupSelectEvent e!    The BBjPopupSelectEvent that causes this method to be executed
    REM  */
    method public void changePriority(BBjPopupSelectEvent e!)
        newPriority! = ABS(e!.getMenuItem().getID())

        if (newPriority! = 6) then newPriority! = 0

        #task!.setPriority(newPriority!)
        BBjAPI().postCustomEvent("TASK_UPDATE", #task!)
    methodend

classend

REM BBj USE Statements
use ::Task.bbj::Task
use ::Utils.bbj::Utils