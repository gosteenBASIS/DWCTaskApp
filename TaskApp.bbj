rem /**
rem  * TaskApp.bbj
rem  * @author gosteen, ndecker
rem  *
rem  */
rem package TaskApp

rem /**
rem  * A DWC-specific task manager BBj program.
rem  *
rem  * The TaskApp program was designed to a be part of a tutorial series that covers
rem  * how to write a graphical web-based application in BBj. It's designed to run
rem  * in the BASIS Dynamic Web Client (DWC), and takes advantage of several DWC
rem  * features including light/dark theme support, responsive design, and making
rem  * use of 3rd-party web components.
rem  */
class public TaskApp

    rem Some sort of list of tasks.
    rem ========================================
    rem It could be a BBjVector or BBjArray of tasks.
    rem It could also be a Java Collection class like:
    rem     Set     https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Set.html
    rem     List    https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/List.html
    rem     Map     https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Map.html
    rem /** A collection of Task objects. */
    field public BBjVector tasks!


    rem Constants
    rem ========================================
    rem /** A constant value that's used to set the TaskApp's theme to the DWC's light theme */
    method public static BBjString THEME_LIGHT()
        methodret "light"
    methodend
    rem /** A constant value that's used to set the TaskApp's theme to the DWC's dark theme */
    method public static BBjString THEME_DARK()
        methodret "dark"
    methodend
    rem /** A constant value that's used to set the TaskApp's theme to the DWC's system theme,
    rem  * meaning that it follows the operating system's configuration.  For example, when the
    rem  * user's device switches to its dark theme, then the app will also switch its theme
    rem  * to the DWC's dark theme. */
    method public static BBjString THEME_SYSTEM()
        methodret "system"
    methodend


    rem User Preferences
    rem ========================================
    rem /** The user's preferred DWC theme to use for the UI */
    field protected BBjString prefsTheme! = #THEME_SYSTEM()
    rem /** The user's preferred priority level for new Tasks that have not been assigned a priority */
    field protected BBjNumber prefsDefaultTaskPriority!


    rem Constructors
    rem ========================================






    rem Methods
    rem ========================================
    rem /**
    rem  * Runs the TaskApp application
    rem  */
    method public void run()
        rem Set defaults and apply user preferences
        BBjAPI().getWebManager().setTheme(prefsTheme!)
        
        createSampleTasks(10)

        rem Create the UI and display the tasks
    methodend
    
    rem /**
    rem  * Creates sample tasks to use for a demo
    rem  * 
    rem  * @param numTasks! The number of sample tasks to create
    rem  */
    method public void createSampleTasks(BBjNumber numTasks!)
        for i=0 to numTasks!
            BBjString taskName! = "Task " + i.toString()
            task! = Task(taskName!)
            rem Do some random configuration of the tasks
            #addTask(task!)
        next i
    methodend

    rem /**
    rem  * Adds a Task to the tasklist
    rem  *
    rem  * @param task!     The Task object
    rem  */
    method public void addTask(Task task!)
        #tasks!.addItem(task!)
    methodend

    rem /**
    rem  * Removes a Task from the tasklist by specifying the tasks's ID
    rem  *
    rem  * @param id        The task's unique ID
    rem  */
    method public void removeTask(BBjString id!)
    methodend

    rem /**
    rem  * Removes a Task from the tasklist by specifying the tasks object
    rem  *
    rem  * @param task!     The Task object
    rem  */
    method public void removeTask(Task task!)
    methodend

classend