rem /**
rem  * Task.bbj
rem  * @author gosteen, ndecker
rem  *
rem  */
rem package TaskApp

use java.util.Date

rem /**
rem  * Defines the data structure for a task in the TaskApp
rem  */
class public Task

    rem Public Fields
    rem /** The title of the task. */
    field public BBjString title!
    rem /** The description of the task. */
    field public BBjString description!

    rem Protected Fields
    rem /** The unique auto-generated ID for the task that may be used to distinguish between instances of the class. */
    field protected BBjString Uuid! = java.util.UUID.randomUUID().toString()

    rem Can we do enums in BBj? Should status just be a boolean isComplete to start with?
    rem /** The status of the task that denotes whether the task is complete or not. */
    field public BBjNumber status

    rem Is a "number" the best way to do priority? It should be restricted to certain values.
    rem /** The priority of the task as a numeric that goes from 1 to 5, where 1 = lowest priority and 5 = highest priority. */
    field public BBjNumber priority
    rem /** The due date for the task. */
    field public java.util.Date dueDate!

    rem /**
    rem  * A Task item's constructor that only takes a title parameter. The other parameters will be set to their default values.
    rem  *
    rem  * @param title!            The task's title string
    rem  */
    method public Task(BBjString title!)
        #title$ = title!
    methodend

    rem /**
    rem  * A Task item's full constructor that specifies all possible parameters
    rem  *
    rem  * @param title!            The task's title string
    rem  * @param description!      The task's description
    rem  * @param priority          The task's priority level (1 -5)
    rem  * @param dueDate!          The task's due date
    rem  */
    method public Task(BBjString title!, BBjString description!, BBjNumber priority, java.util.Date dueDate!)
        #title$ = title!
        #description$ = description!
        #priority = priority
        rem ID should be generated to ensure uniqueness, and isn't relevant to the user
    methodend

classend