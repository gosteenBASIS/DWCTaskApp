REM /**
REM  * WinTask.bbj
REM  * @author gosteen
REM  *C:\Users\gosteen\eclipse\workspaces\bbj-workspace\TaskApp\WinTask.bbj
REM  */
rem package TaskApp

declare auto Task task!
declare auto TaskProperties taskProperties!
task! = new Task()
task!.setTitle("SAMPLE 1")
taskProperties! = new TaskProperties()
taskProperties!.loadTask(task!)
process_events
end

class public TaskProperties
    field public BBjSysGui         sysgui!
    field public BBjTopLevelWindow winTaskProperties!
    field public BBjEditBox        editTitle!
    field public BBjCEdit          editDescription!
    field public BBjListButton     listPriority!
    field public BBjInputD         dateDue!

REM     field public BBjChildWindow    winButtons!
    field public BBjButton         buttonDelete!
    field public BBjButton         buttonCancel!
    field public BBjButton         buttonSave!
    field public BBjString         lock! = "<html><dwc-icon pool='tabler' name='lock' style='width: 30px; height: 30px'></dwc-icon>"
    field public BBjNumber         dataPassed! = 0 

    field public Task              task!

    method public TaskProperties()
        #task! = null()
        #sysgui! = BBjAPI().openSysGui("X0")

        #sysgui! = BBjAPI().getSysGui()
        #winTaskProperties! = #sysgui!.addWindow(#sysgui!.getAvailableContext(), "winTask", $011F0000$)
        #winTaskProperties!.addClass("winTaskProperties")
        #winTaskProperties!.addOuterClass("winTaskPropertiesContainer")

        #editTitle! = #winTaskProperties!.addEditBox("")
        #editTitle!.setAttribute("label", "Title")
        #editTitle!.setPlaceholder("Task Title")

        #editDescription! = #winTaskProperties!.addCEdit("", $0002$)
        #editDescription!.setAttribute("label", "Description")
        #editDescription!.setPlaceholder("Task Description")

        #listPriority! = #winTaskProperties!.addListButton("")
        #listPriority!.setAttribute("label", "Priority")
        for i = Task.PRIORITY_MAX() to Task.PRIORITY_MIN()
            if (i = 6) then
                #listPriority!.addItem("No Priority")
            else
                #listPriority!.addItem("Priority " + str(i))
            endif
        next i

        #dateDue! = #winTaskProperties!.addInputD()
        #dateDue!.setAttribute("label", "Due Date")
        #dateDue!.setText("")
        #dateDue!.setAttribute("visible-calendar-icon","true")
        #dateDue!.setAttribute("show-weeks","true")

        rem Long Year
REM         short_year$ = STBL("!COMPAT!", "SHORT_YEAR=TRUE")
REM         DateMask$=stbl("!DATE"),DateMask=pos($00$=DateMask$),DateMask$=DateMask$(1,DateMask-1)
REM         #dateDue!.setLocale("en-US")
REM         #dateDue!.setMask(DateMask$)
REM         a=msgbox("Date Mask: " + DateMask$ + $0a$ + "!COMPAT for SHORT_YEAR: " + STBL("!COMPAT"))
        #buttonDelete! = #winTaskProperties!.addButton("Delete")
        #buttonDelete!.setAttribute("theme","danger")
        #buttonCancel! = #winTaskProperties!.addButton(2, "&Cancel")
        #buttonSave!   = #winTaskProperties!.addButton(1, "&Save")
        #buttonSave!.setAttribute("theme","primary")

        rem Callbacks
        #buttonCancel!.setCallback(BBjControl.ON_BUTTON_PUSH, #this!, "onCancel")
        #buttonSave!.setCallback(BBjControl.ON_FORM_VALIDATION, #this!, "onSave")
        #buttonDelete!.setCallback(BBjControl.ON_BUTTON_PUSH,#this!,"onDelete")
    methodend

    rem /**
    rem  * Given a task object, load its properties into the Task Properties window,
    rem  * and make the window visible.
    rem  */
    method public void loadTask(Task t!)
        #task! = t!
        #editTitle!.setAttribute("label", "<html>Title <span style='opacity:0.25;position:absolute;right:0;'>" + #task!.getUuid())
        #editTitle!.setText(#task!.getTitle())
        #editDescription!.setText(#task!.getDescription())
        dueDate! = #task!.getDueDate()
        if (dueDate! > 0) then
            #dateDue!.setValue(#task!.getDueDate())
        else
            #dateDue!.setValue(-1)
        endif

        #listPriority!.selectIndex(t!.getPriority()-1)
        #winTaskProperties!.setVisible(1)
    methodend

    rem /** 
    rem  * Receives vector from TaskApp onTaskClick method and sets vector as userData
    rem  * on the cancel and save buttons
    rem  * 
    rem  * @param BBjVector that contains lock icon and task window
    rem  */
        rem TASK CARD VIEW: passData method
REM     method public void passData(BBjVector dataVector!)
REM         #buttonCancel!.setUserData(dataVector!)
REM         #buttonSave!.setUserData(dataVector!)
REM         #dataPassed! = 1
REM     methodend

    rem /**
    rem  * Save the information from the current fields into the Task object in the #task! variable
    rem  */
    method public void onSave(BBjFormValidationEvent e!)
        if (#task! = null()) then methodret

        rem validate title
        title! = e!.getText(#editTitle!)
        if (title!.trim().length() = 0) then
            e!.accept(0)
            tmp = msgbox("Title must not be empty.",BBjSysGui.MSGBOX_ICON_EXCLAMATION,"Invalid Title",mode="theme=warning")
            methodret
        endif

        rem validate date
        date! = e!.getValue(#dateDue!)
        today! = jul(date(0))
        limit! = 5*365
        difference! = date!-today!

        if (abs(difference!) > limit!) AND (date! <> -1) then
            rem date out of bounds
            e!.accept(0)
            message! = "Date cannot be more than 5 years in the "
            if (difference! < 0) then
                message! = message! + "past."
            else
                message! = message! + "future."
            endif

            tmp = msgbox(message!,BBjSysGui.MSGBOX_ICON_EXCLAMATION,"Invalid Date",mode="theme=warning")
            methodret
        endif

        rem Passed validations; update task and post event
        #task!.setTitle(title!)
        #task!.setDescription(e!.getText(#editDescription!))
        #task!.setDueDate(date!)
        #task!.setPriority(e!.getSelectedIndex(#listPriority!)+1)
        #task!.setTitle(#editTitle!.getText())
        
        rem TASK CARD VIEW: sets completed task back to lock after saving
        rem change lock icon back to close and update classes on task window to lock task
REM         if (#dataPassed!) then
REM             dataVector! = e!.getControl().getUserData()
REM             win! = dataVector!.getItem(0)
REM             btnLock! = dataVector!.getItem(1)
REM             btnLock!.setText(#lock!)
REM             btnLock!.removeClass("btn-lock-open")
REM             btnLock!.addClass("btn-lock")
REM             win!.removeClass("task")
REM             win!.addClass("task-complete")
REM         endif

        #winTaskProperties!.setVisible(0)
        BBjAPI().postCustomEvent("TASK_UPDATE",#task!)
        e!.accept(1)
        
        rem TASK CARD VIEW: reset data passed back to 0
REM         #dataPassed! = 0
    methodend

    method public void onCancel(BBjButtonPushEvent e!)   
        
        rem TASK CARD VIEW: sets completed task back to lock after canceling
        rem change lock icon back to close and update classes on task window to lock task
REM         if (#dataPassed!) then
REM             dataVector! = e!.getControl().getUserData()
REM             win! = dataVector!.getItem(0)
REM             btnLock! = dataVector!.getItem(1)
REM             btnLock!.setText(#lock!)
REM             btnLock!.removeClass("btn-lock-open")
REM             btnLock!.addClass("btn-lock")
REM             win!.removeClass("task")
REM             win!.addClass("task-complete")
REM         endif
        
        #winTaskProperties!.setVisible(0)
        rem Clear fields, set task to null?
        
        rem TASK CARD VIEW: reset data passed back to 0
        #dataPassed! = 0
    methodend

    rem /**
    rem  * Activated by the Delete button.
    rem  * Sets the Deleted flag on the task, posts a TASK_UPDATE event, and hides the TaskProperties window.
    rem  */
    method public void onDelete(BBjButtonPushEvent event!)
        #task!.setDeleted(1)
        BBjAPI().postCustomEvent("TASK_UPDATE",#task!)
        #winTaskProperties!.setVisible(0)
    methodend

    rem /**
    rem  * Sets the visibility on the BBjChildWindow for this class.
    rem  *
    rem  * @param visible! A number representing the visibility to set. 0 = invisible.
    rem  */
    method public void setVisible(BBjNumber visible!)
        #winTaskProperties!.setVisible(visible!)
    methodend

classend

use ::Task.bbj::Task
use java.time.LocalDate
